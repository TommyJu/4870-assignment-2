@page "/manage-users"
@rendermode InteractiveServer

@inject UserRoleService UserRoleService

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Manage Users</PageTitle>

<h1>Hello, Admin @currentUserName</h1>

@if (users == null)
{
    <p>Loading...</p>
}
else
{
    <QuickGrid TGridItem="UserWithRoleDto" Items="users" Pagination="@pagination" class="table" >
        <PropertyColumn TGridItem="UserWithRoleDto" TProp="string" Property="u => u.Email" Title="Email" Sortable="true" />
        <PropertyColumn TGridItem="UserWithRoleDto" TProp="string" Property="u => u.FirstName" Title="First Name" Sortable="true" />
        <PropertyColumn TGridItem="UserWithRoleDto" TProp="string" Property="u => u.LastName" Title="Last Name" Sortable="true" />
        <PropertyColumn TGridItem="UserWithRoleDto" TProp="string" Property="u => u.Role" Title="Role" Sortable="true" />

        <TemplateColumn Title="Actions">
            <ChildContent Context="user">
                <div>
                    @if (user.Role == "User")
                    {
                        <button @onclick="@(() => ChangeUserRole(user.Id))" class="btn btn-warning">
                            Make Contributor
                        </button>
                    }
                    else if (user.Role == "Contributor")
                    {
                        <button @onclick="@(() => ChangeUserRole(user.Id))" class="btn btn-info">
                            Make User
                        </button>
                    }
                </div>
            </ChildContent>
        </TemplateColumn>

        <TemplateColumn Title="">
            <ChildContent Context="user">
                <div>
                    @if (user.Role == "User")
                    {
                        <button @onclick="@(() => DeleteUser(user.Email!))" class="btn btn-danger">
                            Delete
                        </button>
                    }
                    else if (user.Role == "Contributor")
                    {
                        <button @onclick="@(() => DeleteUser(user.Email!))" class="btn btn-danger">
                            Delete
                        </button>
                    }  
                </div>
            </ChildContent>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="@pagination" />
}

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    private string currentUserName = "";
    private IQueryable<UserWithRoleDto>? users;

    protected override async Task OnInitializedAsync()
    {
        var currentUser = await UserRoleService.GetCurrentUserAsync();
        currentUserName = currentUser?.FirstName + currentUser?.LastName ?? "Who?";

        var userList = await UserRoleService.GetAllUsersWithRolesAsync();
        users = userList.AsQueryable();
    }

    private async Task ChangeUserRole(string userId)
    {
        var success = await UserRoleService.ToggleUserRoleAsync(userId);
        if (success)
        {
            var userList = await UserRoleService.GetAllUsersWithRolesAsync();
            users = userList.AsQueryable(); // Refresh data
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Failed to change role");
        }
    }

    private async Task DeleteUser(string email)
    {
        var success = await UserRoleService.DeleteUserByEmailAsync(email);
        if (success)
        {
            var userList = await UserRoleService.GetAllUsersWithRolesAsync();
            users = userList.AsQueryable(); // Refresh data
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Failed to delete user");
        }
    }
}